# SPDX-License-Identifier: Apache-2.0
# Â© Crown Copyright 2025. This work has been developed by the National Digital Twin Programme
# and is legally attributed to the Department for Business and Trade (UK) as the governing entity.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: IA Access Build & Deploy
on:
  push:
    branches:
      - 'develop'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: ${{ !contains(github.ref_name, 'release/') }}

permissions:
    contents: read
    packages: write
    id-token: write

jobs:
  build-ianode:
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.get-version-node.outputs.PACKAGE_VERSION }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install

    - name: Build project
      run: yarn run build

    - name: Get project version
      id: get-version-node
      run: echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

    - name: Make SBOM Files
      run: |
        pwd    
        ls -la
        API_SBOM_FILE="./access.sbom.json"
        touch "$API_SBOM_FILE"
        ls -la
        echo '{}' > "$API_SBOM_FILE"
        cat $API_SBOM_FILE
        pwd

    - name: Retain build outputs
      uses: actions/upload-artifact@v4
      with:
        name: all-targets
        path: .


  build-tag-push:
    needs: build-ianode
    uses: National-Digital-Twin/aws-integration-testing/.github/workflows/build-tag-push-docker-image-to-ecr.yml@main
    with:
        image_tag: ${{needs.build-ianode.outputs.PACKAGE_VERSION}}-${{github.sha}}
        container_repo: 'ianode-access'
        path_to_dockerfile: '.'
        project_version: ${{needs.build-ianode.outputs.PACKAGE_VERSION}}
    secrets: inherit

  docker-compose-up:
    needs: build-tag-push
    uses: National-Digital-Twin/aws-integration-testing/.github/workflows/docker-compose-up.yml@main
    with:
      docker-compose-file-name: 'docker-compose-github.yaml'
    secrets: inherit
